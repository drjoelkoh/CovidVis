---
title: "Tomato Project: Covid Visualization"
author: "Daniel Lip, Pierre Chan, Howard Yeo, Joel Koh, Jolie Yeo, Danish Dol, Sarah Loo"
format: html
editor: visual
---

```{r}
# Load necessary libraries
library(tidyverse)
library(lubridate)
```

```{r}
# Load the dataset
covid_data <- read_csv("covid19_sg.csv")
covid_data

# Count total number of NA values before cleaning
total_na_before <- sum(is.na(covid_data))
print(paste("Total NA values before cleaning:", as.numeric(total_na_before)))

```

```{r}

# Clean dataset: replace NA in numeric columns with 0
covid_data <- covid_data %>%
  mutate(
    'Perc population completed at least one dose' = as.numeric(`Perc population completed at least one dose`),
    'Perc population completed vaccination' = as.numeric(`Perc population completed vaccination`),
    'Perc population taken booster shots' = as.numeric(`Perc population taken booster shots`),
  )

# Clean dataset: replace NA in numeric columns with 0
covid_clean <- covid_data %>%
  mutate(across(where(is.numeric), ~replace_na(., 0)))

# Count total number of 0s in numeric columns after cleaning
total_zeros_after <- covid_clean %>%
  select(where(is.numeric)) %>%
  summarise_all(~sum(. == 0)) %>%
  unlist() %>%
  sum()

print(paste("Total 0 values after cleaning:", as.numeric(total_zeros_after)))

```

```{r}


library(patchwork)
library(zoo)

# Filter data for focus period
covid_focus <- covid_clean %>%
  filter(Date >= as.Date("2020-04-20") & Date <= as.Date("2020-09-07")) %>%
  select(Date,
         Dormitory = `Local cases residing in dorms MOH report`,
         Community = `Local cases not residing in doms MOH report`) %>%
  mutate(
    Dormitory_MA = rollmean(Dormitory, k = 7, fill = NA, align = "right"),
    Community_MA = rollmean(Community, k = 7, fill = NA, align = "right")
  )

# Plot 1: Dormitory Cases
p1 <- ggplot(covid_focus, aes(x = Date)) +
  geom_line(aes(y = Dormitory, color = "Daily Cases"), alpha = 0.4) +
  geom_line(aes(y = Dormitory_MA, color = "Weekly Trend"), size = 1) +
  geom_vline(xintercept = as.Date("2020-04-07"), linetype = "dashed", color = "black") +
  geom_vline(xintercept = as.Date("2020-06-01"), linetype = "dashed", color = "black") +
  annotate("text", x = as.Date("2020-04-10"), y = max(covid_focus$Dormitory, na.rm = TRUE),
           label = "Start of Circuit Breaker", hjust = 0, vjust = -1.2, size = 3) +
  annotate("text", x = as.Date("2020-06-04"), y = max(covid_focus$Dormitory, na.rm = TRUE),
           label = "End of Circuit Breaker", hjust = 0, vjust = -1.2, size = 3) +
  scale_color_manual(values = c("Daily Cases" = "steelblue", "Weekly Trend" = "navy")) +
  labs(
    title = "COVID-19 Cases in Migrant Worker Dormitories",
    subtitle = "Daily confirmed cases and weekly trend (Apr–Sep 2020)",
    caption = "Weekly trend is a 7-day moving average used to smooth daily fluctuations.",
    y = "Dormitory Cases", x = NULL, color = NULL
  ) +
  theme_minimal() +
  theme(legend.position = "top")

# Plot 2: Community Cases
p2 <- ggplot(covid_focus, aes(x = Date)) +
  geom_line(aes(y = Community, color = "Daily Cases"), alpha = 0.4) +
  geom_line(aes(y = Community_MA, color = "Weekly Trend"), size = 1) +
  geom_vline(xintercept = as.Date("2020-04-07"), linetype = "dashed", color = "black") +
  geom_vline(xintercept = as.Date("2020-06-01"), linetype = "dashed", color = "black") +
  annotate("text", x = as.Date("2020-04-10"), y = max(covid_focus$Community, na.rm = TRUE),
           label = "Start of Circuit Breaker", hjust = 0, vjust = -1.2, size = 3) +
  annotate("text", x = as.Date("2020-06-04"), y = max(covid_focus$Community, na.rm = TRUE),
           label = "End of Circuit Breaker", hjust = 0, vjust = -1.2, size = 3) +
  scale_color_manual(values = c("Daily Cases" = "darkred", "Weekly Trend" = "firebrick")) +
  labs(
    title = "COVID-19 Cases in the Community",
    subtitle = "Daily confirmed cases and weekly trend (Apr–Sep 2020)",
    caption = "Weekly trend is a 7-day moving average used to smooth daily fluctuations.",
    y = "Community Cases", x = "Date", color = NULL
  ) +
  theme_minimal() +
  theme(legend.position = "top")

# Combine both plots
final_plot <- p1 / p2 + plot_layout(heights = c(3, 1.2))

# Save and show
ggsave("covid_cases_final_with_caption.png", final_plot, width = 12, height = 9)
final_plot





```

```{r}

library(scales)

# Prepare monthly summary
monthly_cases <- covid_clean %>%
  filter(Date >= as.Date("2020-04-20") & Date <= as.Date("2020-09-07")) %>%
  mutate(Month = floor_date(Date, "month")) %>%
  group_by(Month) %>%
  summarise(
    Dormitory = sum(`Local cases residing in dorms MOH report`, na.rm = TRUE),
    Community = sum(`Local cases not residing in doms MOH report`, na.rm = TRUE)
  ) %>%
  pivot_longer(cols = c(Dormitory, Community), names_to = "Group", values_to = "Cases") %>%
  mutate(Month = factor(format(Month, "%b %Y"), levels = format(seq.Date(as.Date("2020-04-01"), as.Date("2020-09-01"), by = "month"), "%b %Y")))

# Plot
monthly_bar <- ggplot(monthly_cases, aes(x = Month, y = Cases, fill = Group)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(
    aes(label = comma(Cases)),
    position = position_dodge(width = 0.9),
    vjust = -0.3,
    size = 3.5
  ) +
  scale_fill_manual(values = c("Dormitory" = "steelblue", "Community" = "darkred")) +
  labs(
    title = "Monthly COVID-19 Cases by Group",
    subtitle = "Summarised total cases in dormitories vs community (Apr–Sep 2020)",
    x = "Month", y = "Total Cases", fill = "Case Group"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Save and view
ggsave("monthly_covid_cases_grouped.png", monthly_bar, width = 10, height = 6)
monthly_bar

```
